// Test script pour v√©rifier le fonctionnement du th√®me
// √Ä ex√©cuter dans la console du navigateur

console.log('üß™ Test du syst√®me de th√®me...');

// Fonction pour tester le changement de th√®me
function testTheme(theme) {
  console.log(`\nüé® Test du th√®me: ${theme}`);
  
  // Appliquer le th√®me
  const root = document.documentElement;
  root.classList.remove('dark', 'light');
  
  if (theme === 'dark') {
    root.classList.add('dark');
    console.log('‚úÖ Classe "dark" ajout√©e');
  } else if (theme === 'light') {
    root.classList.add('light');
    console.log('‚úÖ Classe "light" ajout√©e');
  } else if (theme === 'auto') {
    const isDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;
    if (isDarkMode) {
      root.classList.add('dark');
      console.log('‚úÖ Mode auto: classe "dark" ajout√©e (pr√©f√©rence syst√®me)');
    } else {
      root.classList.add('light');
      console.log('‚úÖ Mode auto: classe "light" ajout√©e (pr√©f√©rence syst√®me)');
    }
  }
  
  // V√©rifier les classes appliqu√©es
  const hasDark = root.classList.contains('dark');
  const hasLight = root.classList.contains('light');
  console.log(`üìã Classes appliqu√©es: dark=${hasDark}, light=${hasLight}`);
  
  // V√©rifier les couleurs
  const bgColor = getComputedStyle(document.body).backgroundColor;
  const textColor = getComputedStyle(document.body).color;
  console.log(`üé® Couleurs: bg=${bgColor}, text=${textColor}`);
  
  return { hasDark, hasLight, bgColor, textColor };
}

// Test de tous les th√®mes
console.log('\n=== TESTS DES TH√àMES ===');

const lightResult = testTheme('light');
const darkResult = testTheme('dark');
const autoResult = testTheme('auto');

// R√©sum√© des tests
console.log('\n=== R√âSUM√â DES TESTS ===');
console.log('‚òÄÔ∏è Mode Light:', lightResult);
console.log('üåô Mode Dark:', darkResult);
console.log('üîÑ Mode Auto:', autoResult);

// V√©rifier si les changements sont visibles
const lightDarkDifferent = lightResult.bgColor !== darkResult.bgColor;
console.log(`\n‚úÖ Les th√®mes light et dark sont diff√©rents: ${lightDarkDifferent ? 'OUI' : 'NON'}`);

if (lightDarkDifferent) {
  console.log('üéâ Le syst√®me de th√®me fonctionne correctement !');
} else {
  console.log('‚ö†Ô∏è Les th√®mes ne semblent pas diff√©rents. V√©rifiez la configuration CSS.');
}

// Fonction pour tester le localStorage
function testLocalStorage() {
  console.log('\nüíæ Test du localStorage...');
  
  // Sauvegarder un th√®me
  localStorage.setItem('theme', 'dark');
  const saved = localStorage.getItem('theme');
  console.log(`Th√®me sauvegard√©: ${saved}`);
  
  // Nettoyer
  localStorage.removeItem('theme');
  console.log('localStorage nettoy√©');
}

testLocalStorage();

console.log('\n‚úÖ Tests termin√©s !'); 